version: "3"
services:
  postgres:
    container_name: postgres-17.2
    image: postgres:17.2
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - ./base-project/postgresql/15.3/data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USR}
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
  base-project:
    container_name: app
    build: ../
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ./base-project/application/log:/log
    depends_on:
      postgres:
        condition: service_started
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USR=${POSTGRES_USR}
      - POSTGRES_PWD=${POSTGRES_PWD}
  nginx:
    container_name: backend-nginx-1.25.3
    image: nginx:1.25.3
    ports:
      - "8080:8080"
    restart: on-failure
    volumes:
      - ./configuration/nginx:/etc/nginx/conf.d
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    restart: on-failure
    volumes:
      - ./base-project/prometheus:/prometheus
      - ./configuration/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - ./base-project/grafana:/var/lib/grafana
      - ./configuration/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./configuration/grafana/datasources:/etc/grafana/provisioning/datasources
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USR}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PWD}